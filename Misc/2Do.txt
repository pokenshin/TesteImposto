- BUG Não documentado 1: quando um item é adicionado ao pedido sem clicar no checkbox "Brinde", o DataColumn resultante deste DataRow ficava vazio, o que causava um erro na hora de converte-lo para boolean e adicioná-lo na propriedade "ItensDoPedido" do objeto "pedido". O erro foi corrigido com uma verificação que atribui o valor de "false" caso a DataColumn "Brinde" estiver nulo no DataRow.

- BUG Não documentado 2: os itens do pedido não estão sendo adicionados na nota fiscal. Corrigido ao chamar o método "ItensDaNotaFiscal.Add(notaFiscalItem)" durante o loop "foreach (PedidoItem itemPedido in pedido.ItensDoPedido)" dentro do método EmitirNotaFiscal da classe NotaFiscal. (Linha 156).

- BUG não documentado 3: originalmente no código, na função EmitirNotaFiscal da classe NotaFiscal, há dois "ifs" que apontam EstadoOrigem == "SP" e EstadoDestino == "SE" e atribuem valores de CFOP diferentes, um com "6.007" e outro com "6.009". O valor que retorna "6.007" foi removido.

Teste 1 - Gerar XML
- Adicionado [Serializable] na classe NotaFiscal.
- Adicionado [Serializable] na classe NotaFiscalItem.
- Tipo da propriedade ItensDaNotaFiscal mudado de IEnumerable<NotaFiscalItem> para List<NotaFiscalItem> para simplificar a serialização.
- Criado método criarXML para geração de XML no serviço NotaFiscalService.

Teste 2 - Criação BD
- Criado banco de dados Teste e populados utilizando stored procedures fornecidas.
- Importadas Stored Procedure "P_NOTA_FISCAL" e "P_NOTA_FISCAL_ITEM"
- Criada propriedade connectionString dentro do NotaFiscalRepository
- Criado método SalvarNotaFiscal em NotaFiscalRepository
- Criado método AtualizaNotaFiscal em NotaFiscalRepository

Teste 3 - Campos para calculo do IPI
- Criados campos BaseIpi, AliquotaIpi e ValorIpi na classe NotaFiscalItem.
- Adicionado cálculo da Aliquota do Ipi em caso de Brinde no método EmitirNotaFiscal da classe NotaFiscal.
- Adicionado cálculo da Base do IPI do produto euqlizando-a ao valor do Item  no método EmitirNotaFiscal da classe NotaFiscal.
- Adicionado cálculo do Valor do IPI do produto multiplicando a Base do IPI à Aliquota do IPI no método EmitirNotaFiscal da classe NotaFiscal.
- Alteração da tabela NotaFiscalItem (scriptados no arquivo CRIAR_NOVOS_CAMPOS_NOTAFISCALITEM.sql)
	- Novo campo: BaseIpi decimal(18,5)
	- Novo campo: AliquotaIpi decimal(18,5)
	- Novo campo: ValorIpi decimal (18,5)
- Alteração da Stored Procedure P_NOTA_FISCAL_ITEM para adicionar os novos campos criados na tabela. Script para reproduzir alterações está no arquivo ALTER_P_NOTA_FISCAL_ITEM.
- Alteração no método SalvarNotaFiscal da classe NotaFiscalRepository para refletir as alterações da Stored Procedure P_NOTA_FISCAL_ITEM

Teste 4 - Criação de Stored Procedure ICMS/Ipi
- Criada nova Stored Procedure chamada P_RELATORIO_ICMS_IPI. Script para criação da Stored Procedure está disponível no arquivo P_RELATORIO_ICMS_IPI.

Teste 5 - Bug no CFOP
- Corrigido bug que impedia a geração do CFOP para os itens inseridos no pedido. O bug era causado pela inversão dos campos EstadoOrigem e EstadoDestino no método EmitirNotaFiscal da classe NotaFiscal.

Teste 6 - Melhorias a serem feitas:
- Diminuição dos campos Estado Origem/Estado Destino
- Restrição de dois caracteres para Estado Origem/Estado Destino
- Inclusão de instrução para inserir somente a sigla em "Estado Origem/Estado Destino"
- Diminuição do campo "Brinde" do DataGrid para evitar barras de rolagem.
- Restrição de tamanho de campos para evitar erros ao salvar no banco de dados.
- Formatar numeros no datagrid.
- Limpar campos ao inserir.

Teste 7 - Desconto de item na nota fiscal
- Nova propriedade criada na classe NotaFiscalItem chamada "Desconto"
- Alteração da tabela NotaFiscalItem (concatenado ao script CRIAR_NOVOS_CAMPOS_NOTAFISCALITEM)
	- Novo campo: Desconto decimal (18,5)
- Alteração da Stored Procedure P_NOTA_FISCAL_ITEM para adicionar o novo campo criado na tabela. Script ALTER_P_NOTA_FISCAL_ITEM atualizado com o novo campo.
- Alteração do método SalvarNotaFiscal da classe NotaFiscalRepository para refletir as alterações da Stored Procedure P_NOTA_FISCAL_ITEM

Teste 8 - Refatoração
- Criação de nova classe "Estado" com todas as siglas válidas para os estados, seus respectivos nomes e regiões.
- Alteração de Propriedades EstadoDestino e EstadoOrigem da classe NotaFiscal para serem do tipo "Estado" ao invés de "string".
- Alteração de Propriedades EstadoDestino e EstadoOrigem da classe Pedido para serem do tipo "Estado" ao invés de "string"
- Criação de nova classe "Calculos" para agregar todos os calculos do sistema.
- Alteração do foreach dentro do método EmitirNotaFiscal dentro da classe NotaFiscal para utilizar os cálculos da nova classe "Calculos".
- Refatoração da lógica de cálculo do Cfop de ifs encadeados para Switch na classe "Calculos"
